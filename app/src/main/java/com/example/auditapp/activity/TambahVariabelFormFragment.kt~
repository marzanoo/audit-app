package com.example.auditapp.activity

import android.app.Activity
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.provider.MediaStore
import android.util.Log
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.fragment.app.Fragment
import com.example.auditapp.config.ApiServices
import com.example.auditapp.config.NetworkConfig
import com.example.auditapp.databinding.FragmentTambahVariabelFormBinding
import com.example.auditapp.helper.SessionManager
import com.example.auditapp.model.UpdateVariabelFormResponse
import com.example.auditapp.model.VariabelForm
import okhttp3.MediaType.Companion.toMediaTypeOrNull
import okhttp3.MultipartBody
import okhttp3.RequestBody.Companion.asRequestBody
import okhttp3.RequestBody.Companion.toRequestBody
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response
import java.io.File

class TambahVariabelFormFragment : Fragment() {
    private var _binding: FragmentTambahVariabelFormBinding? = null
    private val binding get() = _binding!!
    private var temaFormId: Int = 0
    private lateinit var sessionManager: SessionManager
    private lateinit var apiServices: ApiServices
    private var imageUri: Uri? = null

    private val pickImage = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
        if (result.resultCode == Activity.RESULT_OK) {
            val data: Intent? = result.data
            imageUri = data?.data
            try {
                val bitmap = MediaStore.Images.Media.getBitmap(requireActivity().contentResolver, imageUri)
                binding.ivStandar.setImageBitmap(bitmap)
            } catch (e: Exception) {
                e.printStackTrace()
                Toast.makeText(context, "Error loading image: ${e.message}", Toast.LENGTH_SHORT).show()
            }
        }
    }
    companion object {
        private const val ARG_TEMAFORM_ID = "temaFormId"
        fun newInstance(temaFormId: Int): Fragment {
            val fragment = TambahVariabelFormFragment()
            val args = Bundle()
            args.putInt(ARG_TEMAFORM_ID, temaFormId)
            fragment.arguments = args
            return fragment
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        arguments?.let {
            temaFormId = it.getInt(ARG_TEMAFORM_ID, 0)
        }
    }

    override fun onCreateView(
        inflater: LayoutInflater,
        container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentTambahVariabelFormBinding.inflate(inflater, container, false)
        return binding.root
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)
        sessionManager = SessionManager(requireContext())
        apiServices = NetworkConfig().getServices()
        Log.d("TambahVariabelFormFragment", "Tema Form ID: $temaFormId")

        binding.backBtn.setOnClickListener {
            parentFragmentManager.popBackStack()
        }

        binding.btnBatal.setOnClickListener {
            parentFragmentManager.popBackStack()
        }

        binding.btnTambah.setOnClickListener {
            createVariabelForm()
        }

        binding.btnUpload.setOnClickListener {
            openGallery()
        }
    }

    private fun openGallery() {
        val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
        pickImage.launch(intent)
    }

    private fun createVariabelForm() {
        val token = sessionManager.getAuthToken()
        if (token.isNullOrEmpty()) {
            Toast.makeText(requireContext(), "Token tidak tersedia", Toast.LENGTH_SHORT).show()
            return
        }

        val variabelForm = binding.etVariabel.text.toString().trim()
        val standarForm = binding.etStandar.text.toString().trim()

        if (variabelForm.isEmpty() || standarForm.isEmpty()) {
            Toast.makeText(requireContext(), "Mohon untuk isi semua kolom", Toast.LENGTH_SHORT).show()
            return
        }

        binding.btnTambah.isEnabled = false

        if (imageUri != null) {
            val imageFile = createTempFileFromUri(imageUri!!)
            if (imageFile != null) {
                uploadWithImage(token, variabelForm, standarForm, imageFile)
            } else {
                binding.btnTambah.isEnabled = true
                Toast.makeText(requireContext(), "Gagal memproses gambar", Toast.LENGTH_SHORT).show()
            }
        } else {
            Toast.makeText(requireContext(), "Mohon upload foto", Toast.LENGTH_SHORT).show()
            return
        }
    }

    private fun uploadWithImage(
        token: String,
        variabel: String,
        standar: String,
        imageFile: File
    ) {
        val temaFormIdPart = temaFormId.toString().toRequestBody("text/plain".toMediaTypeOrNull())
        val variabelPart = variabel.toRequestBody("text/plain".toMediaTypeOrNull())
        val standarPart = standar.toRequestBody("text/plain".toMediaTypeOrNull())

        val requestFile = imageFile.asRequestBody("image/*".toMediaTypeOrNull())
        val imagePart = MultipartBody.Part.createFormData("standar_foto", imageFile.name, requestFile)

        apiServices.createVariabelForm("Bearer $token", temaFormIdPart, variabelPart, standarPart, imagePart).enqueue(
            object : Callback<UpdateVariabelFormResponse> {
                override fun onResponse(
                    call: Call<UpdateVariabelFormResponse>,
                    response: Response<UpdateVariabelFormResponse>
                ) {
                    binding.btnTambah.isEnabled = true
                    if (response.isSuccessful) {
                        val responseBody = response.body()
                        if (responseBody?.message == "Variabel sudah ada") {
                            Toast.makeText(requireContext(), "Variabel sudah ada", Toast.LENGTH_SHORT).show()
                        } else {
                            Toast.makeText(requireContext(), "Variabel berhasil ditambahkan", Toast.LENGTH_SHORT).show()
                            parentFragmentManager.popBackStack()
                        }
                    } else {
                        Toast.makeText(requireContext(), "Gagal: ${response.message()}", Toast.LENGTH_SHORT).show()
                    }
                }

                override fun onFailure(call: Call<UpdateVariabelFormResponse>, t: Throwable) {
                    binding.btnTambah.isEnabled = true
                    Toast.makeText(requireContext(), "Error: ${t.message}", Toast.LENGTH_SHORT).show()
                }
            })
    }
}